#!/usr/bin/env bash
set -euo pipefail

# Usage: ./scripts/export-cognito-env.sh <stack-name> [output-file]
# Writes Cognito identifiers from the CloudFormation stack into an .env-compatible file.

STACK_NAME=${1:-}
OUTPUT_FILE=${2:-.env.cognito}

if [[ -z "${STACK_NAME}" ]]; then
  echo "Usage: $0 <stack-name> [output-file]" >&2
  exit 1
fi

if ! command -v aws >/dev/null 2>&1; then
  echo "aws CLI is required. Install it then authenticate with AWS credentials." >&2
  exit 1
fi

USER_POOL_ID=$(aws cloudformation describe-stacks \
  --stack-name "${STACK_NAME}" \
  --query "Stacks[0].Outputs[?OutputKey=='CognitoUserPoolId'].OutputValue" \
  --output text)

CLIENT_ID=$(aws cloudformation describe-stacks \
  --stack-name "${STACK_NAME}" \
  --query "Stacks[0].Outputs[?OutputKey=='CognitoUserPoolClientId'].OutputValue" \
  --output text)

ADMIN_GROUP=$(aws cloudformation describe-stacks \
  --stack-name "${STACK_NAME}" \
  --query "Stacks[0].Outputs[?OutputKey=='CognitoAdminGroup'].OutputValue" \
  --output text)

if [[ -z "${USER_POOL_ID}" || -z "${CLIENT_ID}" ]]; then
  echo "Failed to retrieve Cognito outputs from stack ${STACK_NAME}." >&2
  exit 1
fi

{
  echo "# Generated by scripts/export-cognito-env.sh"
  echo "COGNITO_USER_POOL_ID=${USER_POOL_ID}"
  echo "COGNITO_CLIENT_ID=${CLIENT_ID}"
  echo "COGNITO_ADMIN_GROUP=${ADMIN_GROUP}"
} > "${OUTPUT_FILE}"

echo "Wrote Cognito environment values to ${OUTPUT_FILE}" >&2
